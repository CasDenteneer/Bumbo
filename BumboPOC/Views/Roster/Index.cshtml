@model RosterDay

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="d-flex justify-content-between m-4 border rounded-2">
    <button class="btn btn-outline-primary">
        <a class="text-decoration-none"  asp-action="Index" asp-route-dateInput="@Model.Date.AddDays(-1).Date"> Vorige dag </a>
    </button>
    
    <p>Week @Model.GetWeekNumber(Model.Date) | @Html.DisplayFor(model => model.Date) </p>

    <button class="btn btn-outline-primary">
        <a class="text-decoration-none" asp-action="Index" asp-route-dateInput="@Model.Date.AddDays(1).Date"> Volgende dag </a>
    </button>
    

</div>



<div>
    <button btn btn-outline-secondary>
        <a class="text-decoration-none" asp-action="Edit" asp-controller="Prognosis" asp-route-id="@Model?.PrognosisDay.Id">(Edit prognose) Nog te roosterde uren: </a>
    </button>
    
</div>

<div >

    <dl class="row border" >
        <div class="border col-sm d-flex justify-content-center flex-nowrap">
            
            <dt >
                @Html.DisplayNameFor(model => model.PrognosisDay.CassiereDepartment) : 
            </dt>
            <dd>
                @Html.DisplayFor(model => model.PrognosisDay.CassiereDepartment) Uren
            </dd>
        </div>

        <div class="border col-sm d-flex justify-content-center flex-nowrap">
            <dt>
                @Html.DisplayNameFor(model => model.PrognosisDay.FreshDepartment) : 
            </dt>
            <dd >
                @Html.DisplayFor(model => model.PrognosisDay.FreshDepartment) Uren
            </dd>
        </div >

        <div class="border col-sm d-flex justify-content-center flex-nowrap">
            <dt>
                @Html.DisplayNameFor(model => model.PrognosisDay.StockersDepartment) : 
            </dt>
            <dd >
                @Html.DisplayFor(model => model.PrognosisDay.StockersDepartment) Uren
            </dd>
        </div>
       
        
       
    </dl>
</div>

<div>
    <!--table, 24 long horizontal -->
    <table class="table">
        <thead>
            <tr>
                @for (int i = 0; i < 25; i++)
                {
                    <th>@i</th>
                }
            </tr>
        </thead>




     <tbody>
            <!--For each available employee, create a row-->
            @if (Model.AvailableEmployees != null)
            {
                foreach (var employee in Model.AvailableEmployees)
                {
                    <tr>
                        <td>
                            @employee.FullName
                            @foreach(var department in employee.Departments){
                                <p>@DepartmentEnumExtension.GetDutchNames(department.Department)</p>
                            }
                        </td>
                        @for (int i = 0; i < 24; i++)
                        {
                            <td>
  
                                    <input type="checkbox" />
                                
                            </td>
                        }
                    </tr>
                }
            }

</tbody>
</table>
</div>

                    <!--                              
                        if (employee.RosterHours.Any(x => x.Hour == i))
                                {
                                    <input type="checkbox" checked="checked" />
                                }
                                else
                                { 
                                }
                   -->